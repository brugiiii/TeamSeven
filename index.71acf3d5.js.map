{"mappings":"2iBAAA,IAAAA,EAAAC,EAAA,S,0BCAAC,EAAAD,EAAA,S,kBAGOE,iBACL,MAGMC,SAHiB,EAAAF,EAAAG,SACrB,2FAEsBC,KAAKF,OAE7BG,aAAaC,QAAQ,SAAUC,KAAKC,UAAUN,G,CDHhD,IACA,EAAAO,EAAAC,uBAAsBC,KAAKb,EAAAc,oBAE3BC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,EAAAC,oB,WET3C,IAAAC,EAAApB,EAAA,S,qEASAqB,EAAAD,GAASE,OAAOC,KAAK,CAAEC,SAAU,eACjCV,EAAAC,KAAKU,iBAAiBR,iBAAiB,UAOhCf,eAA4BwB,GACjCA,EAAEC,kBACF,EAAAC,EAAAC,eACAC,EAAoBC,YAEpB,MAAMC,MAAEA,GAAUN,EAAEO,OAAOC,SACrBC,EAAcH,EAAMI,MAAMC,OAIhC,GAFAP,EAAoBE,MAAQG,EAER,KAAhBA,EAGF,OAFAd,EAAAD,GAASE,OAAOgB,KAAK,wBACrB,EAAAV,EAAAW,eAGA,EAAAX,EAAAC,eACA,IACEC,EAAoBU,oBAAoB5B,KAAKb,EAAAc,oBAE1B,IAAIQ,EAAAoB,GAAJ,CAAe,aAAc,CAC9CC,WAAY,IACZC,aAAc,GACdC,aAAc,EACdC,KAAM,IAEGC,GAAG,cAAcC,IAC1B,MAAMC,EAAcD,EAAMF,KAC1Bf,EAAoBe,KAAOG,EAC3BlB,EAAoBU,oBAAoB5B,KAAKb,EAAAc,mBAAmB,IAElEC,EAAAC,KAAKU,iBAAiBwB,O,CACtB,MAAOC,GACPC,QAAQC,IAAIF,E,KArClB,MAAMpB,EAAsB,IAAI,EAAAuB,EAAAC,qBAAoB,CAClDT,KAAM,EACNV,YAAa,K","sources":["src/js/start.js","src/js/getMoviesGenres.js","src/js/onSearchByName.js"],"sourcesContent":["import { renderMoviesMarkup } from './renderFilms';\nimport { refs } from './refs';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { getMoviesGenres } from './getMoviesGenres';\nimport { onGalleryItemClick } from './onGalleryItemClick';\n\ngetMoviesGenres();\nfetchTrendingMovies().then(renderMoviesMarkup);\n\nrefs.galleryList.addEventListener('click', onGalleryItemClick);\n","import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\n\nexport async function getMoviesGenres() {\n  const responce = await axios(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const genres = responce.data.genres;\n\n  localStorage.setItem('genres', JSON.stringify(genres));\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport { renderMoviesMarkup } from './renderFilms';\nimport { startLoader, stopLoader } from './loader';\nimport { refs } from './refs';\nimport { MoviesServiceByName } from './apiServiceMovies';\n\nNotiflix.Notify.init({ position: 'center-top' });\nrefs.moviesSearchForm.addEventListener('submit', onFormSubmit);\n\nconst moviesServiceByName = new MoviesServiceByName({\n  page: 1,\n  searchQuery: '',\n});\n\nexport async function onFormSubmit(e) {\n  e.preventDefault();\n  startLoader();\n  moviesServiceByName.resetPage();\n\n  const { query } = e.target.elements;\n  const searchQuery = query.value.trim();\n\n  moviesServiceByName.query = searchQuery;\n\n  if (searchQuery === '') {\n    Notiflix.Notify.info('Enter something');\n    stopLoader();\n    return;\n  } else {\n    startLoader();\n    try {\n      moviesServiceByName.fetchMoviesByName().then(renderMoviesMarkup);\n\n      const pagination = new Pagination('pagination', {\n        totalItems: 500,\n        itemsPerPage: 10,\n        visiblePages: 5,\n        page: 1,\n      });\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        moviesServiceByName.page = currentPage;\n        moviesServiceByName.fetchMoviesByName().then(renderMoviesMarkup);\n      });\n      refs.moviesSearchForm.reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"names":["$c9UGP","parcelRequire","$2shzp","async","genres","default","data","localStorage","setItem","JSON","stringify","$gkCWX","fetchTrendingMovies","then","renderMoviesMarkup","$krGWQ","refs","galleryList","addEventListener","$c72bu","onGalleryItemClick","$7Y9D8","$parcel$interopDefault","Notify","init","position","moviesSearchForm","e","preventDefault","$gjiCh","startLoader","$e06cf6d5b6d0a698$var$moviesServiceByName","resetPage","query","target","elements","searchQuery","value","trim","info","stopLoader","fetchMoviesByName","$fb9GJ","totalItems","itemsPerPage","visiblePages","page","on","event","currentPage","reset","error","console","log","$8emQL","MoviesServiceByName"],"version":3,"file":"index.71acf3d5.js.map"}