{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,uCAKA,MAAME,EAAgB,IAAI,EAAAC,EAAAC,SACpBC,EAAY,IAAI,EAAAC,EAAAF,UAEtB,EAAAG,EAAAC,sBAAqBC,MAErBC,eAAyBC,GACvB,IACEN,EAAUO,mBACJ,IAAIC,SAAQC,GAAWC,WAAWD,EAAS,aAC3CZ,EAAcc,qBAAqBP,MAAK,EAACQ,QAAEA,MAC/CA,EAAQC,KAAIC,IACV,MAAMC,YAAEA,EAAWC,eAAEA,EAAcC,UAAEA,EAASC,aAAEA,EAAYC,GAAEA,GAC5DL,EACIM,EAAOF,EAAaG,MAAM,EAAG,GAE7BC,EAAS,IAAIhB,EAAWgB,QACxBC,EAAWN,EACjB,IAAIO,EAAc,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CACxC,MAAME,EAAQL,EAAOM,MAAKC,GAAKA,EAAEV,KAAOI,EAASE,KACjDD,EAAYM,KAAKH,EAAMI,K,CAEzB,IAAIC,EAAe,IAAIR,EAAYH,MAAM,EAAG,GAL9B,SAKyCY,KAAK,KACxDT,EAAYE,OAASxB,EAAAgC,kBACvBF,EAAe,IAAIR,GAAaS,KAAK,MAGvC,MAAME,GAAK,EAAAvC,EAAAG,SAAa,C,YACtBgB,E,eACAC,E,aACAgB,E,KACAZ,E,GACAD,IAGgBiB,SAASC,cAAc,iBAC/BC,mBAAmB,YAAaH,EAAG,GAC7C,IAEJnC,EAAUuC,Y,CACV,MAAOC,GACPC,QAAQD,MAAM,mCAAoCA,E","sources":["src/js/index.js","src/js/renderCards.js"],"sourcesContent":["import './teamModal';\nimport './searchByKeyword';\nimport './renderCards';\nimport './cardModal';\n","import cardTemplate from '../templates/cardTemplate.hbs';\nimport NewApiService from './api-servis';\nimport { numberOfGeneras, ganreListProcessin } from './searchByKeyword';\nimport NewLoader from './loader'; \n\nconst newApiService = new NewApiService(); \nconst newLoader = new NewLoader();\n\nganreListProcessin().then(fetchData);\n\nasync function fetchData(genresBase) {\n  try {\n    newLoader.showLoader();\n    await new Promise(resolve => setTimeout(resolve, 300));\n    await newApiService.fetchPopularMovies().then(({ results }) => {\n      results.map(result => {\n        const { poster_path, original_title, genre_ids, release_date, id } =\n          result;\n        const date = release_date.slice(0, 4);\n\n        const genres = [...genresBase.genres];\n        const genreIds = genre_ids;\n        let genresNames = [];\n        const other = 'Other';\n        for (let i = 0; i < genreIds.length; i++) {\n          const genre = genres.find(g => g.id === genreIds[i]);\n          genresNames.push(genre.name);\n        }\n        let currentGanre = [...genresNames.slice(0, 2), other].join(' ');\n        if (genresNames.length < numberOfGeneras) {\n          currentGanre = [...genresNames].join(' ');\n        }\n\n        const mk = cardTemplate({\n          poster_path,\n          original_title,\n          currentGanre,\n          date,\n          id,\n        });\n\n        const container = document.querySelector('.main-content');\n        container.insertAdjacentHTML('beforeend', mk);\n      });\n    });\n    newLoader.hideLoader();\n  } catch (error) {\n    console.error('Помилка під час отримання даних:', error);\n  }\n}\n"],"names":["parcelRequire","$gh9Wa","$dc777f51b705d798$var$newApiService","$fgrH9","default","$dc777f51b705d798$var$newLoader","$gjiCh","$lxQoS","ganreListProcessin","then","async","genresBase","showLoader","Promise","resolve","setTimeout","fetchPopularMovies","results","map","result","poster_path","original_title","genre_ids","release_date","id","date","slice","genres","genreIds","genresNames","i","length","genre","find","g","push","name","currentGanre","join","numberOfGeneras","mk","document","querySelector","insertAdjacentHTML","hideLoader","error","console"],"version":3,"file":"index.5f8ca2e5.js.map"}