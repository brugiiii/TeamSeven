{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,iEAGME,EAAgB,IAAI,EAAAC,EAAAC,SACtBC,EAAa,K,SACDC,I,OAAAA,EAAfC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,mFACoB,EAAAC,EAAAC,sB,OAAnBP,EAAUQ,EAAAC,K,4CADWC,MAAAC,KAAAC,U,aAAPX,EAAOS,MAAAC,KAAAC,U,CAGtBC,GAEDhB,EAAciB,qBAAqBC,MAAK,SAAAC,GAAUA,EAAPC,QAGjCC,KAAI,SAAAC,GASX,I,kBACC,IAAMC,EAAQC,EAAOC,MAAK,SAAAC,G,OAAKA,EAAEC,KAAOC,EAASC,E,IACjDC,EAAYC,KAAKR,EAAMS,K,EAVfC,EAA6DX,EAA7DW,YAAaC,EAAgDZ,EAAhDY,eAAgBC,EAAgCb,EAAhCa,UAAWC,EAAqBd,EAArBc,aAAcT,EAAOL,EAAPK,GAExDU,EAAOD,EAAaE,MAAM,EAAG,GAE9Bd,EAAUnB,EAAAkC,EAAA,CAAGpC,EAAWqB,QACxBI,EAAWO,EACbL,EAAc,GAETU,EAAI,EAAGA,EAAIZ,EAASa,OAAQD,IAAGE,EAAAF,GAIzC,IAAIG,EAAgBtC,EAAAkC,EAAD,CAAIT,EAAYQ,MAAM,EAAE,IAApBM,OAAJ,CALL,UAKwCC,KAAK,KACvDf,EAAYW,OAAShC,EAAAqC,kBACvBH,EAAgBtC,EAAAkC,EAAD,CAAIT,GAAae,KAAK,MAGrC,IAAME,GAAK,EAAAC,EAAA9C,SAAa,CAAE+B,cAAaC,iBAAgBS,eAAcN,OAAMV,OAEzDsB,SAASC,cAAc,iBAC/BC,mBAAmB,YAAaJ,E","sources":["src/js/index.js","src/js/renderCards.js"],"sourcesContent":["import './teamModal';\nimport './searchByKeyword';\nimport './renderCards';\nimport './cardModal';\n","import cardTemplate from '../templates/cardTemplate.hbs';\nimport NewApiService from './api-servis';\nimport { numberOfGeneras ,ganreListProcessin} from './searchByKeyword'\nconst newApiService = new NewApiService();\nlet genresBase = null;\n async function getBase() {\n  genresBase = await ganreListProcessin();\n }\n getBase();\n  \nnewApiService.fetchPopularMovies().then(({ results }) => {\n\n \n  results.map(result => {\n    const { poster_path, original_title, genre_ids, release_date, id } = result;\n    //  const genres = genre_ids.join(', ');\n    const date = release_date.slice(0, 4);\n\n   const genres = [...genresBase.genres];\n   const genreIds = genre_ids;\n   let genresNames = [];\n   const other =\"Other\"\n   for (let i = 0; i < genreIds.length; i++) {\n    const genre = genres.find(g => g.id === genreIds[i]);\n    genresNames.push(genre.name); \n  }\n  let currentGanre = [...genresNames.slice(0,2), other].join(' ');\n  if( genresNames.length < numberOfGeneras ){\n    currentGanre = [...genresNames].join(' ');\n  }\n\n    const mk = cardTemplate({ poster_path, original_title, currentGanre, date, id });\n\n    const container = document.querySelector('.main-content');\n    container.insertAdjacentHTML('beforeend', mk);\n  });\n});\n"],"names":["parcelRequire","$bpxeT","$3f7698770ed19e9c$var$newApiService","$igxJ3","default","$3f7698770ed19e9c$var$genresBase","$3f7698770ed19e9c$var$_getBase","$parcel$interopDefault","$2TvXO","mark","_callee","$9BNc1","ganreListProcessin","_ctx","sent","apply","this","arguments","$3f7698770ed19e9c$var$getBase","fetchPopularMovies","then","param","results","map","result","genre","genres","find","g","id","genreIds","i","genresNames","push","name","poster_path","original_title","genre_ids","release_date","date","slice","$8nrFW","i1","length","_loop","currentGanre","concat","join","numberOfGeneras","mk","$drCPS","document","querySelector","insertAdjacentHTML"],"version":3,"file":"index.5d1cad59.js.map"}